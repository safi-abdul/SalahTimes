{"version":3,"sources":["Components/SalahTimes.js","Components/GetLocation.js","App.js","reportWebVitals.js","index.js"],"names":["SalahTimes","props","useState","timings","setTimings","callApi","c","a","uri","URL","searchParams","append","lat","long","fetch","method","response","json","result","data","useEffect","asyncEffect","ampm","time","arr","split","parseInt","Fajr","Dhuhr","Asr","Maghrib","Isha","GetLocation","pos","setPos","posi","getCoordinates","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Error","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA2EeA,MAxEf,SAAoBC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBAClBC,EADkB,KACTC,EADS,cAGVC,EAHU,8EAGzB,WAAuBC,GAAvB,mBAAAC,EAAA,6DACMC,EAAM,IAAIC,IAAI,sCACdC,aAAaC,OAAO,WAAYL,EAAEM,KACtCJ,EAAIE,aAAaC,OAAO,YAAaL,EAAEO,MACvCL,EAAIE,aAAaC,OAAO,SAAU,GAClCH,EAAIE,aAAaC,OAAO,SAAU,GAClCH,EAAIE,aAAaC,OAAO,SAAU,SANpC,SAQyBG,MAAMN,EAAK,CAAEO,OAAQ,QAR9C,cAQQC,EARR,iBAoBuBA,EAASC,OApBhC,eAoBQC,EApBR,yBAqBSA,EAAOC,KAAKhB,SArBrB,6CAHyB,sBA2BzBiB,qBAAU,WAAM,4CACd,sBAAAb,EAAA,kEACEH,EADF,SACmBC,EAAQJ,GAD3B,8EADc,uBAAC,WAAD,wBAIdoB,KACC,IAEH,IAAMC,EAAO,SAACC,GACZ,GAAGA,EAAK,CACN,IAAMC,EAAMD,EAAKE,MAAM,KAEvB,OADUC,SAASF,EAAI,IACV,IAAM,GAAK,EAAK,IAAMA,EAAI,KAI3C,OAAIrB,EAEA,8BACE,kCACE,gCACE,+BACE,sCACA,uCACA,qCACA,yCACA,2CAGJ,gCACE,+BACE,6BAAKmB,EAAKnB,EAAQwB,QAClB,6BAAKL,EAAKnB,EAAQyB,SAClB,6BAAKN,EAAKnB,EAAQ0B,OAClB,6BAAKP,EAAKnB,EAAQ2B,WAClB,6BAAKR,EAAKnB,EAAQ4B,kBAOrB,2CC3BIC,MAzCf,WAAwB,IAAD,EACC9B,mBAAS,IADV,mBACd+B,EADc,KACTC,EADS,KAGjBC,EAAO,GACX,SAASC,IACP,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,GAAIC,UAAUC,YACZ,OAAOD,UAAUC,YAAYC,oBAAmB,SAACC,GAC/CR,EAAO,CACLvB,IAAK+B,EAASC,OAAOC,SACrBhC,KAAM8B,EAASC,OAAOE,WAExBR,EAAQH,MAGVI,EAAO,IAAIQ,MAAM,8BAYvB,OAPA3B,qBAAU,WAAM,4CACd,sBAAAb,EAAA,kEACE2B,EADF,SACeE,IADf,8EADc,uBAAC,WAAD,wBAIdf,KACC,IAEAY,EAAIrB,KAAOqB,EAAIpB,KAEZ,8BACA,cAAC,EAAD,CAAYD,IAAKqB,EAAIrB,IAAKC,KAAMoB,EAAIpB,SAMpC,2CC7BOmC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACC,cAAC,EAAD,OCOUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5589553f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//import callApi from '../Services/CallApi'\r\n\r\nfunction SalahTimes(props) {\r\n  const [timings, setTimings] = useState({});\r\n\r\n  async function callApi(c) {\r\n    var uri = new URL(\"http://api.aladhan.com/v1/timings\");\r\n    uri.searchParams.append(\"latitude\", c.lat);\r\n    uri.searchParams.append(\"longitude\", c.long);\r\n    uri.searchParams.append(\"method\", 2);\r\n    uri.searchParams.append(\"school\", 0);\r\n    uri.searchParams.append(\"annual\", \"false\");\r\n\r\n    const response = await fetch(uri, { method: \"GET\" });\r\n    // .then(res => {\r\n    //     if(res.ok){\r\n    //       return res.json();\r\n    //     }\r\n    // })\r\n    // .then(data=>  {\r\n    //     if(data){\r\n    //         result = data.data.timings;\r\n    //     }\r\n    // });\r\n    //return result;\r\n    const result = await response.json();\r\n    return result.data.timings;\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function asyncEffect() {\r\n      setTimings(await callApi(props));\r\n    }\r\n    asyncEffect();\r\n  }, []);\r\n\r\n  const ampm = (time) =>{\r\n    if(time){\r\n      const arr = time.split(\":\");\r\n      const t = parseInt(arr[0]);\r\n      return ((t + 11) % 12 + 1) + \":\" + arr[1];\r\n    }\r\n  }\r\n\r\n  if (timings) {\r\n    return (\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Fajr</th>\r\n              <th>Dhuhr</th>\r\n              <th>Asr</th>\r\n              <th>Maghrib</th>\r\n              <th>Isha</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{ampm(timings.Fajr)}</td>\r\n              <td>{ampm(timings.Dhuhr)}</td>\r\n              <td>{ampm(timings.Asr)}</td>\r\n              <td>{ampm(timings.Maghrib)}</td>\r\n              <td>{ampm(timings.Isha)}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Loading</div>;\r\n  }\r\n}\r\n\r\nexport default SalahTimes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SalahTimes from \"./SalahTimes\";\r\n\r\nfunction GetLocation() {\r\n  const [pos, setPos] = useState({});\r\n\r\n  let posi = {};\r\n  function getCoordinates() {\r\n    return new Promise((resolve, reject) => {\r\n      if (navigator.geolocation) {\r\n        return navigator.geolocation.getCurrentPosition((position) => {\r\n          posi = {\r\n            lat: position.coords.latitude,\r\n            long: position.coords.longitude,\r\n          };\r\n          resolve(posi);\r\n        });\r\n      } else {\r\n        reject(new Error(\"Can't find geolocation\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function asyncEffect() {\r\n      setPos(await getCoordinates());\r\n    }\r\n    asyncEffect();\r\n  }, []);\r\n\r\n  if(pos.lat && pos.long){\r\n    return (\r\n        <div>        \r\n        <SalahTimes lat={pos.lat} long={pos.long}/>\r\n        </div>\r\n      );\r\n  }\r\n  else{\r\n    return (\r\n        <div>Loading</div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default GetLocation;\r\n","import GetLocation from './Components/GetLocation';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <GetLocation/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}